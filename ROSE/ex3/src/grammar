[0] module ::= MODULE IDENTIFIER SEMI declarations begin END IDENTIFIER DOT 
[2] begin ::= BEGIN statement_sequence 
[3] begin ::= 
[4] declarations ::= const_declaration type_declaration var_declaration procedure_declarations 
[5] const_declaration ::= CONST const_expression SEMI 
[6] const_declaration ::= 
    const_expression_prefix ::= IDENTIFIER EQ expression
    const_expression ::= const_expression_prefix const_expression_suffix
    const_expression_suffix ::= SEMI const_expression
    cosnt_expression_suffix ::= 
[9] type_declaration ::= type type_expression 
[10] type_declaration ::= 
[11] type_expression ::= type_expression IDENTIFIER EQ type SEMI 
[12] type_expression ::= IDENTIFIER EQ type SEMI 
[13] var_declaration ::= VAR var_expression 
[14] var_declaration ::= 
[15] var_expression ::= identifier_list COLON type SEMI var_expression 
[16] var_expression ::= identifier_list COLON type SEMI 
[17] procedure_declarations ::= procedure_declaration SEMI procedure_declarations 
[18] procedure_declarations ::= 
[19] procedure_declaration ::= procedure_heading SEMI procedure_body 
[20] procedure_body ::= declarations begin END IDENTIFIER 
[21] procedure_heading ::= PROCEDURE IDENTIFIER formal_parameters 
[22] formal_parameters ::= LEFTP fp_sections RIGHTP 
[23] fp_sections ::= fp_section 
[24] fp_sections ::= fp_section SEMI fp_sections 
[25] fp_sections ::= 
[26] fp_section ::= VAR identifier_list COLON type 
[27] fp_section ::= identifier_list COLON type 
[28] type ::= IDENTIFIER 
[29] type ::= array_type 
[30] type ::= record_type 
[31] record_type ::= RECORD field_list field_list_with_semi END 
[32] field_list ::= identifier_list COLON type 
[33] field_list ::= 
[34] field_list_with_semi ::= SEMI field_list field_list_with_semi 
[35] field_list_with_semi ::= 
[36] array_type ::= ARRAY expression OF type 
[37] identifier_list ::= IDENTIFIER identifier_list_with 
[38] identifier_list_with ::= COMMA IDENTIFIER identifier_list_with 
[39] identifier_list_with ::= 
[40] statement_sequence ::= statement statement_with_semi 
[41] statement_with_semi ::= SEMI statement statement_with_semi 
[42] statement_with_semi ::= 
[43] statement ::= assignment 
[44] statement ::= procedure_call 
[45] statement ::= if_statement 
[46] statement ::= while_statement 
[47] statement ::= 
[48] while_statement ::= WHILE expression DO statement_sequence END 
[49] if_statement ::= IF expression THEN statement_sequence elsif_statement else_statement END 
[50] elsif_statement ::= ELSIF expression THEN statement_sequence elsif_statement 
[51] elsif_statement ::= 
[52] else_statement ::= ELSE statement_sequence 
[53] else_statement ::= 
[54] procedure_call ::= IDENTIFIER actual_parameters 
[55] procedure_call ::= IDENTIFIER 
[56] actual_parameters ::= LEFTP expression_list RIGHTP 
[57] assignment ::= IDENTIFIER selector ASSIGN expression 
[58] expression ::= simple_expression comp_expression 
[59] expression_list ::= expression expression_list_with 
[60] expression_list ::= 
[61] expression_list_with ::= COMMA expression expression_list_with 
[62] expression_list_with ::= 
[63] comp ::= EQ 
[64] comp ::= NE 
[65] comp ::= LT 
[66] comp ::= LE 
[67] comp ::= GT 
[68] comp ::= GE 
[69] comp_expression ::= comp simple_expression 
[70] comp_expression ::= 
[71] unary ::= PLUS 
[72] unary ::= MINUS 
[73] unary ::= 
[74] binary_low ::= PLUS 
[75] binary_low ::= MINUS 
[76] binary_low ::= OR 
[77] binary_mid ::= TIMES 
[78] binary_mid ::= DIV 
[79] binary_mid ::= MOD 
[80] binary_mid ::= AND 
[81] simple_expression ::= unary term term_list_with 
[82] term_list_with ::= binary_low term term_list_with 
[83] term_list_with ::= 
[84] term ::= factor binary_mid factor 
[85] term ::= factor 
[86] factor ::= IDENTIFIER selector 
[87] factor ::= number 
[88] factor ::= LEFTP expression RIGHTP 
[89] factor ::= NOT factor 
[90] number ::= INTEGER 
[91] selector ::= DOT IDENTIFIER selector 
[92] selector ::= LEFTB expression RIGHTB selector 
[93] selector ::= 